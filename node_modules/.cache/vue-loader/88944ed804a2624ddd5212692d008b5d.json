{"remainingRequest":"/home/aigul/projects/rtsp_stream_v2/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/aigul/projects/rtsp_stream_v2/src/App.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/home/aigul/projects/rtsp_stream_v2/src/App.vue","mtime":1613166430730},{"path":"/home/aigul/projects/rtsp_stream_v2/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/aigul/projects/rtsp_stream_v2/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/aigul/projects/rtsp_stream_v2/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/aigul/projects/rtsp_stream_v2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/aigul/projects/rtsp_stream_v2/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgpib2R5IHsKICBtYXJnaW46IDA7Cn0KCi5teUNhbnZhcyB7CiAgcG9zaXRpb246IGFic29sdXRlOwogIHdpZHRoOiAxMjgwcHg7CiAgaGVpZ2h0OiA2NDBweDsKICB0b3A6IDA7CiAgbGVmdDogMTBweDsKfQo="},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <div id=\"app\">\n    <canvas class=\"camera myCanvas\" id=\"videoCanvas\" style=\"z-index: 10\"/>\n    <div id=\"stage-container\" class=\"myCanvas\" @click=\"areaOnClick\"\n         style=\"border: 1px solid black; z-index: 10000\"></div>\n    <div id=\"container\"></div>\n\n    <p style=\"margin-top: 700px;\">\n      <strong>Координаты клика:{ {{x}}, {{y}} }</strong>\n      <br/>\n      <strong>Массив:</strong> {{arr}}\n    </p>\n\n    <!--    <button onclick=\"newArea()\">Создать область</button>-->\n    <!--    <button onclick=\"closeArea()\">Замкнуть область</button>-->\n    <!--    <button onclick=\"deleteArea()\">Удалить область</button>-->\n  </div>\n</template>\n\n\n<script>\nimport JSMpeg from 'jsmpeg-player'\nimport Konva from 'konva'\n\nexport default {\n  name: 'App',\n  components: {},\n  data: () => ({\n    arr: [],\n    i: 0,\n    flag: true,\n    x: null, y: null,\n  }),\n  mounted() {\n    let canvas = document.getElementById('videoCanvas');\n    let url = 'ws://192.168.1.100:5000';\n    let player = new JSMpeg.Player(url, {\n      canvas: canvas,\n      autoplay: true, audio: false, loop: true,\n      onVideoDecode: () => {\n      }\n    })\n  },\n  created: function () {\n\n    var stage = new Konva.Stage({\n      // container: 'stage-container'\n      container: 'container',\n      width: window.innerWidth,\n      height: window.innerHeight,\n    });\n\n    var layer = new Konva.Layer();\n\n    var path = new Konva.Path({\n      x: 50,\n      y: 40,\n      fill: 'green',\n      scale: {\n        x: 2,\n        y: 2,\n      },\n    });\n\n// add the shape to the layer\n    layer.add(path);\n\n// add the layer to the stage\n    stage.add(layer);\n  },\n  methods: {\n    areaOnClick(e) {\n      if (this.flag) {\n        var target = document.querySelector('#stage-container').getBoundingClientRect();\n        var x = e.clientX - target.left;\n        var y = e.clientY - target.top;\n        this.x = x;\n        this.y = y;\n        var dot = {x, y};\n        this.arr.push(dot);\n\n\n\n        if (this.i == 0) {\n          linePath.moveTo(x, y);\n        } else if (Math.abs(x - this.arr[0].x) > 10 || Math.abs(y - this.arr[0].y) > 10) {\n          linePath.lineTo(x, y);\n        } else {\n          alert('closeArea()');\n        }\n        this.i++;\n      }\n    },\n  }\n}\n</script>\n\n<style>\nbody {\n  margin: 0;\n}\n\n.myCanvas {\n  position: absolute;\n  width: 1280px;\n  height: 640px;\n  top: 0;\n  left: 10px;\n}\n</style>"]}]}