{"remainingRequest":"/home/aigul/projects/rtsp_stream_v2/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/aigul/projects/rtsp_stream_v2/src/views/CameraPage.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/aigul/projects/rtsp_stream_v2/src/views/CameraPage.vue","mtime":1614771307757},{"path":"/home/aigul/projects/rtsp_stream_v2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/aigul/projects/rtsp_stream_v2/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["CameraPage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsCA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"CameraPage.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div id=\"cameraPage\"><b-row class=\"m-0\">\n    <b-col cols=\"8\">\n      <h2>Камера {{ id }}</h2>\n    </b-col>\n    <b-col class=\"float-right\">\n\n    <div v-if=\"chosenArea==-1\">\n          <div v-if=\"!isDrawing\">\n            <b-button v-on:click=\"isDrawing = 'true'\" variant=\"secondary\" class=\"mx-2\">Создать область</b-button>\n            <b-button v-if=\"arr.length\" v-on:click=\"addController(arr)\" class=\"mx-2\" variant=\"secondary\">Прикрепить\n            </b-button>\n          </div>\n          <div v-else>\n            <b-button v-if=\"i>2\" v-on:click=\"closeArea\" variant=\"dark\" class=\"mx-2\">Замкнуть область</b-button>\n            <b-button v-on:click=\"delDrawingArea\" variant=\"dark\" class=\"mx-2\">Отменить</b-button>\n          </div>\n        </div>\n        <div v-else>\n          <b-button v-on:click=\"deleteArea(chosenArea)\" variant=\"dark\" class=\"mx-2\">Удалить выбранную область</b-button>\n        </div>\n    </b-col>\n  </b-row>\n\n    <div class=\"canvases\">\n<!--      <img class=\"myCanvas\" style=\"z-index: 10\" :src=\"'/cameras/'+id\">-->\n      <img class=\"myCanvas\" style=\"z-index: 10\" :src=\"'/api/camera/'+id+'/capture'\">\n      <canvas ref=\"canvas\" id='drawing-pad' width='1280' height=\"640\" style=\"z-index: 100; border: 2px solid black\"\n              class=\"myCanvas\">\n        This is an interactive drawing pad.\n      </canvas>\n    </div>\n\n  </div>\n</template>\n\n\n<script>\nimport axios from \"axios\";\n\nexport default {\n  name: 'CameraPage',\n  props: ['id'],\n  data: () => ({\n    points: [],\n    area_id: 0,\n    i: 0,\n    arr: [],\n    old_arr: [],\n    x: null, y: null,\n    canvas: null,\n    context: null,\n    isDrawing: false,\n    chosenArea: -1,\n    rect: null,\n    choseOldArea: -1,\n  }),\n  mounted() {\n    this.canvas = this.$refs.canvas\n    this.context = this.canvas.getContext(\"2d\"); //ctx\n    this.context.lineWidth = 2;\n    this.context.font = \"20px Georgia\";\n    this.context.strokeStyle = \"rgb(0,70,160)\"\n    this.context.fillStyle = \"rgba(0,255,255,0.4)\"\n    this.rect = this.canvas.getBoundingClientRect()\n    this.canvas.addEventListener('click', this.click)\n    this.drawOldAreas()\n    // this.drawFromServer()\n  },\n  methods: {\n    closeArea: function () {\n      var area = {\"id\": this.area_id, \"dots\": this.points}\n      console.log(this.points)\n      this.area_id++;\n      this.arr.push(area)\n      // this.writeAreasToFile()\n      this.points = []\n      this.i = 0\n      this.x = null\n      this.y = null\n      this.context.closePath()\n      this.context.fill();\n      this.context.stroke();\n      this.isDrawing = false;\n    },\n    choseArea(id) {\n      this.context.clearRect(0, 0, this.rect.width, this.rect.height)\n      this.drawFromArray(this.arr)\n      this.context.strokeStyle = \"rgba(0,30,150, 0.6)\"\n      this.context.fillStyle = \"rgba(0,106,255, 0.3)\"\n      this.drawFromArray(this.old_arr)\n      this.context.strokeStyle = \"rgb(0,70,160)\"\n      this.context.fillStyle = \"rgba(0,255,255, 0.4)\"\n      this.chosenArea = id\n      if (this.choseOldArea == 1) {\n        var points = this.arr[id].dots\n      }\n      else if (this.choseOldArea == 2){\n        var points = this.old_arr[id].dots\n      }\n      this.context.beginPath();\n      this.context.moveTo(points[0][0], points[0][1]);\n      for (var i = 0; i < points.length; i++) {\n        this.context.lineTo(points[i][0], points[i][1])\n      }\n      this.context.closePath()\n      this.context.strokeStyle = \"red\"\n      this.context.fillStyle = \"rgba(255,0,170, 0.4)\"\n      this.context.fill();\n      this.context.stroke();\n      this.context.strokeStyle = \"rgb(0,70,160)\"\n      this.context.fillStyle = \"rgba(0,255,255,0.4)\"\n    },\n    deleteArea(id) {\n      if (this.choseOldArea == 1){\n        this.arr.splice(id, 1)\n      }\n      else {\n        var ar_id = this.old_arr[id].id\n        // console.log(id)\n        axios.delete(`/api/areas/${ar_id}`)\n            .then(response => (console.log(response)));\n        this.old_arr.splice(id, 1)\n      }\n      this.context.clearRect(0, 0, this.rect.width, this.rect.height)\n      this.drawFromArray(this.arr)\n      this.context.strokeStyle = \"rgba(0,30,150, 0.6)\"\n      this.context.fillStyle = \"rgba(0,106,255, 0.3)\"\n      this.drawFromArray(this.old_arr)\n\n      this.context.strokeStyle = \"rgb(0,70,160)\"\n      this.context.fillStyle = \"rgba(0,255,255, 0.4)\"\n      this.chosenArea = -1\n      this.choseOldArea = -1\n    },\n    delDrawingArea() {\n      this.points = []\n      this.i = 0\n      this.x = null\n      this.y = null\n      this.isDrawing = false\n\n      this.context.clearRect(0, 0, this.rect.width, this.rect.height)\n      this.drawFromArray(this.arr)\n      this.context.strokeStyle = \"rgba(0,30,150, 0.6)\"\n      this.context.fillStyle = \"rgba(0,106,255, 0.3)\"\n      this.drawFromArray(this.old_arr)\n\n      this.context.strokeStyle = \"rgb(0,70,160)\"\n      this.context.fillStyle = \"rgba(0,255,255, 0.4)\"\n    },\n    click(e) {\n      var x = e.clientX - this.rect.left\n      var y = e.clientY - this.rect.top\n      if (!this.isDrawing) {\n        if (this.inside([x, y], this.arr) != -1) {\n          this.choseOldArea = 1\n          this.choseArea(this.inside([x, y], this.arr), this.arr)\n        }\n        if (this.inside([x, y], this.old_arr) != -1) {\n          this.choseOldArea = 2\n          this.choseArea(this.inside([x, y], this.old_arr), this.old_arr)\n        }\n      } else {\n        this.points.push([x, y])\n        if (this.i == 0) {\n          this.context.beginPath();\n          this.context.moveTo(x, y);\n        }\n        if (this.i > 0) {\n          this.context.lineTo(x, y);\n          this.context.stroke();\n          if (Math.abs(x - this.points[0][0]) < 10 && Math.abs(y - this.points[0][1]) < 10 && this.i>=2) {\n            // alert('closeArea')\n            // this.points.pop()\n            this.closeArea()\n            return 0\n          }\n        }\n        this.i++\n      }\n    },\n    drawFromArray(arr) {\n      var points\n      var fillColor = this.context.fillStyle.split(',')\n      for (var i = 0; i < arr.length; i++) {\n        if (arr[i].status){\n          // fillColor[3] = arr[i].status +')'\n          // fillColor = fillColor[0]+\",\"+fillColor[1]+\",\"+fillColor[2]+\",\"+fillColor[3]\n          // this.context.fillStyle\n              this.context.strokeText(arr[i].status, arr[i].x, arr[i].y)\n          // this.context.fillStyle = \"rgba(0,106,255, 0.3)\"\n        }\n        points = arr[i].dots\n        this.context.beginPath()\n        this.context.moveTo(points[0][0], points[0][1]);\n        for (var j = 1; j < points.length; j++) {\n          var x = points[j][0]\n          var y = points[j][1]\n          this.context.lineTo(x, y);\n        }\n        this.context.closePath()\n        this.context.fill();\n        this.context.stroke();\n      }\n    },\n    async addController(arr) {\n      this.$router.push({name: 'addController', params: {arr: this.arrPxToProc(arr), id: this.id}})\n    },\n    pxToProcent(x, y) {\n      return [Math.round((x / this.rect.width) * 100), Math.round((y / this.rect.height) * 100)]\n    },\n    procentToPx(x, y) {\n      return [x * this.rect.width / 100,y * this.rect.height / 100]\n    },\n    inside(point, vs) {\n      var x = point[0], y = point[1];\n      var inside = false, points = []\n      for (var k = 0; k < vs.length; k++) {\n        points = vs[k].dots\n        for (var i = 0, j = points.length - 1; i < points.length; j = i++) {\n          var xi = points[i][0], yi = points[i][1];\n          var xj = points[j][0], yj = points[j][1];\n\n          var intersect = ((yi > y) != (yj > y))\n              && (x < (xj - xi) * (y - yi) / (yj - yi) + xi);\n          if (intersect) inside = !inside;\n        }\n        if (inside) {\n          return k\n        }\n      }\n      return -1\n    },\n    arrPxToProc(arr) {\n      console.log(arr.length)\n      var points, arr1 = [], points2 = [], dot\n      for (var i = 0; i < arr.length; i++) {\n        points = arr[i].dots\n        console.log(points, points.length)\n        for (var j = 0; j < points.length; j++) {\n          dot = this.pxToProcent(points[j][0], points[j][1])\n          points2.push(dot)\n        }\n        arr1.push({'id': i, 'dots': points2})\n        points2 = []\n      }\n      return arr1\n    },\n    async drawOldAreas(){\n      try {\n        this.context.strokeStyle = \"rgba(0,30,150, 0.6)\"\n        this.context.fillStyle = \"rgba(0,106,255, 0.3)\"\n        var response = await axios.get('/api/areas');\n        response = response.data\n        var coord, status;\n        for (var i=0; i<response.length; i++) {\n          if (this.id == response[i].camera_id) {\n            var maxX=0.0, minX=this.rect.width, maxY=0.0, minY=this.rect.height\n            coord = response[i].coordinates\n            status = ((await axios.get('/api/controllers')).data.find(controller => controller.id === response[i].controllers[0])).status\n            for (var j = 0; j < coord.length; j++) {\n              coord[j] = (this.procentToPx(coord[j][0], coord[j][1]))\n              minX = Math.min(minX, coord[j][0])\n              maxX = Math.max(maxX, coord[j][0])\n              minY = Math.min(minY, coord[j][1])\n              maxY = Math.max(maxY, coord[j][1])\n            }\n            console.log(i, minX, maxX, minY, maxY)\n            // this.context.strokeText(status, (maxX+minX)/2, (maxY+minY)/2)\n            coord = {id: response[i].id, dots: coord, status: status, x:((maxX+minX)/2), y:((maxY+minY)/2)}\n            this.old_arr.push(coord)\n            coord = [coord]\n            this.drawFromArray(coord)\n            coord = null\n          }\n        }\n\n        this.context.strokeStyle = \"rgb(0,70,160)\"\n        this.context.fillStyle = \"rgba(0,255,255,0.4)\"\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  }\n}\n</script>\n\n<style>\nbody {\n  margin: 0;\n}\n\n.canvases {\n  position: relative;\n}\n\n.myCanvas {\n  position: absolute;\n  width: 1280px;\n  height: 640px;\n  top: 0px\n}\n</style>"]}]}